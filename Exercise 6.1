{-# LANGUAGE OverloadedStrings #-}

import CodeWorld

botCircle, midCircle, topCircle :: Color -> Picture
botCircle c = colored c (translated 0 (-3) (solidCircle 1))
midCircle c = colored c (translated 0   0  (solidCircle 1))
topCircle c = colored c (translated 0   3  (solidCircle 1))

frame :: Picture
frame = rectangle 2.5 9

trafficLight :: Double -> Picture
trafficLight 1 = botCircle green & midCircle black  & topCircle black & frame
trafficLight 2 = botCircle black & midCircle yellow & topCircle black & frame
trafficLight 3 = botCircle black & midCircle black  & topCircle red   & frame
trafficLight 4 = botCircle black & midCircle yellow & topCircle red   &frame


trafficController :: Double -> Picture
trafficController t
  | round (t/3) `mod` 4 == 0 = trafficLight 1
  | round (t/2) `mod` 4 == 1 = trafficLight 2
  | round (t/3) `mod` 4 == 3 = trafficLight 4
  | otherwise                = trafficLight 3
                                                  
main :: IO ()
main = animationOf trafficController
